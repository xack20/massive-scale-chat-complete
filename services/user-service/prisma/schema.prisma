generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  username      String    @unique
  password      String
  fullName      String
  avatar        String?
  bio           String?
  role          String    @default("user")
  isActive      Boolean   @default(true)
  isVerified    Boolean   @default(false)
  lastLogin     DateTime?
  preferences   Json      @default("{}")
  contacts      Contact[] @relation("UserContacts")
  contactOf     Contact[] @relation("ContactUser")
  blockedUsers  Block[]   @relation("BlockedBy")
  blockedBy     Block[]   @relation("BlockedUser")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([email])
  @@index([username])
  @@index([isActive])
}

model Contact {
  id        String   @id @default(uuid())
  userId    String
  contactId String
  nickname  String?
  status    String   @default("pending") // pending, accepted, blocked
  user      User     @relation("UserContacts", fields: [userId], references: [id], onDelete: Cascade)
  contact   User     @relation("ContactUser", fields: [contactId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, contactId])
  @@index([userId])
  @@index([contactId])
  @@index([status])
}

model Block {
  id          String   @id @default(uuid())
  blockerId   String
  blockedId   String
  reason      String?
  blocker     User     @relation("BlockedBy", fields: [blockerId], references: [id], onDelete: Cascade)
  blocked     User     @relation("BlockedUser", fields: [blockedId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())

  @@unique([blockerId, blockedId])
  @@index([blockerId])
  @@index([blockedId])
}