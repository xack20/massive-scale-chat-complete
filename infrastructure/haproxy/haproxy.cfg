global
    maxconn 4096
    log stdout local0
    log stdout local1 notice

defaults
    mode http
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    option httplog
    log global

frontend http_front
    bind *:80
    stats uri /haproxy?stats
    
    # Global CORS headers for all requests
    http-response set-header Access-Control-Allow-Origin "*"
    http-response set-header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
    http-response set-header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization"
    http-response set-header Access-Control-Allow-Credentials "true"
    http-response set-header Access-Control-Max-Age "3600"
    
    # Handle OPTIONS preflight requests globally
    acl is_options method OPTIONS
    http-request add-header Access-Control-Allow-Origin "*" if is_options
    http-request add-header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" if is_options
    http-request add-header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" if is_options
    http-request add-header Access-Control-Allow-Credentials "true" if is_options
    http-request add-header Access-Control-Max-Age "3600" if is_options
    http-request return status 200 hdr "Access-Control-Allow-Origin" "*" hdr "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS" hdr "Access-Control-Allow-Headers" "Origin, X-Requested-With, Content-Type, Accept, Authorization" hdr "Access-Control-Allow-Credentials" "true" hdr "Access-Control-Max-Age" "3600" if is_options
    
    # ACL for different services
    acl is_api path_beg /api
    acl is_ws path_beg /ws
    acl is_health path_beg /health
    
    # Route to appropriate backend
    use_backend api_backend if is_api
    use_backend health_backend if is_health
    use_backend ws_backend if is_ws
    default_backend frontend_backend

backend api_backend
    balance roundrobin
    server api1 172.18.0.10:3000 check
    
    # Add CORS headers for preflight requests
    http-request set-header Access-Control-Allow-Origin "*"
    http-request set-header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
    http-request set-header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization"
    http-request set-header Access-Control-Allow-Credentials "true"
    http-response set-header Access-Control-Allow-Origin "*"
    http-response set-header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
    http-response set-header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization"
    http-response set-header Access-Control-Allow-Credentials "true"
    http-response set-header Access-Control-Max-Age "3600"

    # Handle OPTIONS method for CORS preflight
    acl is_options_method method OPTIONS
    http-request add-header Access-Control-Max-Age 3600 if is_options_method
    http-request return status 200 if is_options_method

backend health_backend
    balance roundrobin
    server api1 172.18.0.10:3000 check

backend ws_backend
    balance source
    server presence1 172.18.0.11:3005 check

backend frontend_backend
    server frontend1 172.18.0.14:3006 check

listen stats
    bind *:8080
    stats enable
    stats uri /
    stats refresh 30s
